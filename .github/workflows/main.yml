name: Build release assets

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    # Sequence of patterns matched against refs/tags
    tags:
    - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      
      # Enable NPM cache before installing. This will restore the npm directory for subsequent builds
      - uses: c-hive/gha-npm-cache@v1
      - run: npm install

      - name: Copy config file
        run: cp static/config.default.js static/config.js
      
      - name: Build web bundle
        id: web_bundle
        run: |
          npm run build:web
          zip -r trellis-web.zip www/

      # - name: Build debug APK
      #   # You may pin to the exact commit or the version.
      #   # uses: oxr463/setup-cordova@cfd9f1c03c813dddb8a934257f159147bb15bcd4
      #   uses: oxr463/setup-cordova@0.0.2
      #   with:
      #     exec: |
      #       mkdir -p www \
      #       npm run cordova -- platform add android && \
      #       npm run build:android \
      #       mv platforms/android/app/build/outputs/apk/debug/app-debug.apk trellis-debug.apk
      
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with: 
          tag_name: ${{ github.ref }}
          release_name: Trellis release ${{ github.ref }}
          draft: true
          prerelease: false
        
      # - name: Upload debug APK
      #   id: upload-debug-apk
      #   uses: actions/upload-release-asset@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
      #     asset_path: ./trellis-debug.apk
      #     asset_name: trellis-debug-${{github.ref}}.apk
      #     asset_content_type: application/octet-stream
      
      - name: Upload web bundle
        id: upload-web-bundle
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./trellis-web.zip
          asset_name: trellis-web-${{github.ref}}.zip
          asset_content_type: application/zip
